import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as e,o as l}from"./app-Bnjw32HE.js";const r={};function i(n,a){return l(),o("div",null,a[0]||(a[0]=[e("h2",{id:"loader-和-plugin-有什么区别",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loader-和-plugin-有什么区别"},[e("span",null,"Loader 和 Plugin 有什么区别")])],-1),e("ul",null,[e("li",null,'Loader：直译为"加载器"。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 loader。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。'),e("li",null,'Plugin：直译为"插件"。Plugin 可以扩展 webpack 的功能，让 webpack 具有更多的灵活性。 在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。')],-1)]))}const d=t(r,[["render",i],["__file","loader_plugin.html.vue"]]),u=JSON.parse('{"path":"/webpack/loader_plugin.html","title":"Loader和Plugin","lang":"zh-CN","frontmatter":{"title":"Loader和Plugin","date":"2025-02-27T00:00:00.000Z","category":["Loader","Plugin"],"description":"Loader 和 Plugin 有什么区别 Loader：直译为\\"加载器\\"。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 loader。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。 Plugin：直译为\\"插件\\"。Pl...","head":[["meta",{"property":"og:url","content":"https://hr-koala.github.io/htblog/htblog/webpack/loader_plugin.html"}],["meta",{"property":"og:site_name","content":"博客和随笔"}],["meta",{"property":"og:title","content":"Loader和Plugin"}],["meta",{"property":"og:description","content":"Loader 和 Plugin 有什么区别 Loader：直译为\\"加载器\\"。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 loader。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。 Plugin：直译为\\"插件\\"。Pl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T14:01:43.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-27T14:01:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Loader和Plugin\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-27T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-27T14:01:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"htong\\",\\"url\\":\\"htong890@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"Loader 和 Plugin 有什么区别","slug":"loader-和-plugin-有什么区别","link":"#loader-和-plugin-有什么区别","children":[]}],"git":{"createdTime":1740664903000,"updatedTime":1740664903000,"contributors":[{"name":"hr-koala","username":"hr-koala","email":"htong890@outlook.com","commits":1,"url":"https://github.com/hr-koala"}]},"readingTime":{"minutes":0.54,"words":162},"filePathRelative":"webpack/loader_plugin.md","localizedDate":"2025年2月27日","excerpt":"<h2>Loader 和 Plugin 有什么区别</h2>\\n<ul>\\n<li>Loader：直译为\\"加载器\\"。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 loader。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。</li>\\n<li>Plugin：直译为\\"插件\\"。Plugin 可以扩展 webpack 的功能，让 webpack 具有更多的灵活性。 在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。</li>\\n</ul>","autoDesc":true}');export{d as comp,u as data};
